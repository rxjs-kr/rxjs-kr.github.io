{
  "type": "Program",
  "body": [
    {
      "type": "ImportDeclaration",
      "specifiers": [
        {
          "type": "ImportSpecifier",
          "local": {
            "type": "Identifier",
            "name": "scan",
            "range": [
              9,
              13
            ],
            "loc": {
              "start": {
                "line": 1,
                "column": 9
              },
              "end": {
                "line": 1,
                "column": 13
              }
            }
          },
          "imported": {
            "type": "Identifier",
            "name": "scan",
            "range": [
              9,
              13
            ],
            "loc": {
              "start": {
                "line": 1,
                "column": 9
              },
              "end": {
                "line": 1,
                "column": 13
              }
            }
          },
          "range": [
            9,
            13
          ],
          "loc": {
            "start": {
              "line": 1,
              "column": 9
            },
            "end": {
              "line": 1,
              "column": 13
            }
          }
        }
      ],
      "source": {
        "type": "Literal",
        "value": "./scan",
        "raw": "'./scan'",
        "range": [
          21,
          29
        ],
        "loc": {
          "start": {
            "line": 1,
            "column": 21
          },
          "end": {
            "line": 1,
            "column": 29
          }
        }
      },
      "range": [
        0,
        30
      ],
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 1,
          "column": 30
        }
      }
    },
    {
      "type": "ImportDeclaration",
      "specifiers": [
        {
          "type": "ImportSpecifier",
          "local": {
            "type": "Identifier",
            "name": "takeLast",
            "range": [
              41,
              49
            ],
            "loc": {
              "start": {
                "line": 2,
                "column": 9
              },
              "end": {
                "line": 2,
                "column": 17
              }
            }
          },
          "imported": {
            "type": "Identifier",
            "name": "takeLast",
            "range": [
              41,
              49
            ],
            "loc": {
              "start": {
                "line": 2,
                "column": 9
              },
              "end": {
                "line": 2,
                "column": 17
              }
            }
          },
          "range": [
            41,
            49
          ],
          "loc": {
            "start": {
              "line": 2,
              "column": 9
            },
            "end": {
              "line": 2,
              "column": 17
            }
          }
        }
      ],
      "source": {
        "type": "Literal",
        "value": "./takeLast",
        "raw": "'./takeLast'",
        "range": [
          57,
          69
        ],
        "loc": {
          "start": {
            "line": 2,
            "column": 25
          },
          "end": {
            "line": 2,
            "column": 37
          }
        }
      },
      "range": [
        32,
        70
      ],
      "loc": {
        "start": {
          "line": 2,
          "column": 0
        },
        "end": {
          "line": 2,
          "column": 38
        }
      }
    },
    {
      "type": "ImportDeclaration",
      "specifiers": [
        {
          "type": "ImportSpecifier",
          "local": {
            "type": "Identifier",
            "name": "defaultIfEmpty",
            "range": [
              81,
              95
            ],
            "loc": {
              "start": {
                "line": 3,
                "column": 9
              },
              "end": {
                "line": 3,
                "column": 23
              }
            }
          },
          "imported": {
            "type": "Identifier",
            "name": "defaultIfEmpty",
            "range": [
              81,
              95
            ],
            "loc": {
              "start": {
                "line": 3,
                "column": 9
              },
              "end": {
                "line": 3,
                "column": 23
              }
            }
          },
          "range": [
            81,
            95
          ],
          "loc": {
            "start": {
              "line": 3,
              "column": 9
            },
            "end": {
              "line": 3,
              "column": 23
            }
          }
        }
      ],
      "source": {
        "type": "Literal",
        "value": "./defaultIfEmpty",
        "raw": "'./defaultIfEmpty'",
        "range": [
          103,
          121
        ],
        "loc": {
          "start": {
            "line": 3,
            "column": 31
          },
          "end": {
            "line": 3,
            "column": 49
          }
        }
      },
      "range": [
        72,
        122
      ],
      "loc": {
        "start": {
          "line": 3,
          "column": 0
        },
        "end": {
          "line": 3,
          "column": 50
        }
      }
    },
    {
      "type": "ImportDeclaration",
      "specifiers": [
        {
          "type": "ImportSpecifier",
          "local": {
            "type": "Identifier",
            "name": "pipe",
            "range": [
              133,
              137
            ],
            "loc": {
              "start": {
                "line": 4,
                "column": 9
              },
              "end": {
                "line": 4,
                "column": 13
              }
            }
          },
          "imported": {
            "type": "Identifier",
            "name": "pipe",
            "range": [
              133,
              137
            ],
            "loc": {
              "start": {
                "line": 4,
                "column": 9
              },
              "end": {
                "line": 4,
                "column": 13
              }
            }
          },
          "range": [
            133,
            137
          ],
          "loc": {
            "start": {
              "line": 4,
              "column": 9
            },
            "end": {
              "line": 4,
              "column": 13
            }
          }
        }
      ],
      "source": {
        "type": "Literal",
        "value": "../util/pipe",
        "raw": "'../util/pipe'",
        "range": [
          145,
          159
        ],
        "loc": {
          "start": {
            "line": 4,
            "column": 21
          },
          "end": {
            "line": 4,
            "column": 35
          }
        }
      },
      "range": [
        124,
        160
      ],
      "loc": {
        "start": {
          "line": 4,
          "column": 0
        },
        "end": {
          "line": 4,
          "column": 36
        }
      },
      "trailingComments": [
        {
          "type": "Block",
          "value": " tslint:enable:max-line-length ",
          "range": [
            162,
            197
          ],
          "loc": {
            "start": {
              "line": 5,
              "column": 0
            },
            "end": {
              "line": 5,
              "column": 35
            }
          }
        },
        {
          "type": "Block",
          "value": "*\r\n * Applies an accumulator function over the source Observable, and returns the\r\n * accumulated result when the source completes, given an optional seed value.\r\n *\r\n * <span class=\"informal\">Combines together all values emitted on the source,\r\n * using an accumulator function that knows how to join a new source value into\r\n * the accumulation from the past.</span>\r\n *\r\n * <img src=\"./img/reduce.png\" width=\"100%\">\r\n *\r\n * Like\r\n * [Array.prototype.reduce()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce),\r\n * `reduce` applies an `accumulator` function against an accumulation and each\r\n * value of the source Observable (from the past) to reduce it to a single\r\n * value, emitted on the output Observable. Note that `reduce` will only emit\r\n * one value, only when the source Observable completes. It is equivalent to\r\n * applying operator {@link scan} followed by operator {@link last}.\r\n *\r\n * Returns an Observable that applies a specified `accumulator` function to each\r\n * item emitted by the source Observable. If a `seed` value is specified, then\r\n * that value will be used as the initial value for the accumulator. If no seed\r\n * value is specified, the first item of the source is used as the seed.\r\n *\r\n * @example <caption>Count the number of click events that happened in 5 seconds</caption>\r\n * var clicksInFiveSeconds = Rx.Observable.fromEvent(document, 'click')\r\n *   .takeUntil(Rx.Observable.interval(5000));\r\n * var ones = clicksInFiveSeconds.mapTo(1);\r\n * var seed = 0;\r\n * var count = ones.reduce((acc, one) => acc + one, seed);\r\n * count.subscribe(x => console.log(x));\r\n *\r\n * @see {@link count}\r\n * @see {@link expand}\r\n * @see {@link mergeScan}\r\n * @see {@link scan}\r\n *\r\n * @param {function(acc: R, value: T, index: number): R} accumulator The accumulator function\r\n * called on each source value.\r\n * @param {R} [seed] The initial accumulation value.\r\n * @return {Observable<R>} An Observable that emits a single value that is the\r\n * result of accumulating the values emitted by the source Observable.\r\n * @method reduce\r\n * @owner Observable\r\n ",
          "range": [
            199,
            2329
          ],
          "loc": {
            "start": {
              "line": 6,
              "column": 0
            },
            "end": {
              "line": 49,
              "column": 3
            }
          }
        }
      ]
    },
    {
      "type": "ExportNamedDeclaration",
      "declaration": {
        "type": "FunctionDeclaration",
        "id": {
          "type": "Identifier",
          "name": "reduce",
          "range": [
            2347,
            2353
          ],
          "loc": {
            "start": {
              "line": 50,
              "column": 16
            },
            "end": {
              "line": 50,
              "column": 22
            }
          }
        },
        "params": [
          {
            "type": "Identifier",
            "name": "accumulator",
            "range": [
              2354,
              2365
            ],
            "loc": {
              "start": {
                "line": 50,
                "column": 23
              },
              "end": {
                "line": 50,
                "column": 34
              }
            }
          },
          {
            "type": "Identifier",
            "name": "seed",
            "range": [
              2367,
              2371
            ],
            "loc": {
              "start": {
                "line": 50,
                "column": 36
              },
              "end": {
                "line": 50,
                "column": 40
              }
            }
          }
        ],
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "IfStatement",
              "test": {
                "type": "BinaryExpression",
                "operator": ">=",
                "left": {
                  "type": "MemberExpression",
                  "computed": false,
                  "object": {
                    "type": "Identifier",
                    "name": "arguments",
                    "range": [
                      2748,
                      2757
                    ],
                    "loc": {
                      "start": {
                        "line": 56,
                        "column": 8
                      },
                      "end": {
                        "line": 56,
                        "column": 17
                      }
                    }
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "length",
                    "range": [
                      2758,
                      2764
                    ],
                    "loc": {
                      "start": {
                        "line": 56,
                        "column": 18
                      },
                      "end": {
                        "line": 56,
                        "column": 24
                      }
                    }
                  },
                  "range": [
                    2748,
                    2764
                  ],
                  "loc": {
                    "start": {
                      "line": 56,
                      "column": 8
                    },
                    "end": {
                      "line": 56,
                      "column": 24
                    }
                  }
                },
                "right": {
                  "type": "Literal",
                  "value": 2,
                  "raw": "2",
                  "range": [
                    2768,
                    2769
                  ],
                  "loc": {
                    "start": {
                      "line": 56,
                      "column": 28
                    },
                    "end": {
                      "line": 56,
                      "column": 29
                    }
                  }
                },
                "range": [
                  2748,
                  2769
                ],
                "loc": {
                  "start": {
                    "line": 56,
                    "column": 8
                  },
                  "end": {
                    "line": 56,
                    "column": 29
                  }
                }
              },
              "consequent": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ReturnStatement",
                    "argument": {
                      "type": "FunctionExpression",
                      "id": {
                        "type": "Identifier",
                        "name": "reduceOperatorFunctionWithSeed",
                        "range": [
                          2798,
                          2828
                        ],
                        "loc": {
                          "start": {
                            "line": 57,
                            "column": 24
                          },
                          "end": {
                            "line": 57,
                            "column": 54
                          }
                        }
                      },
                      "params": [
                        {
                          "type": "Identifier",
                          "name": "source",
                          "range": [
                            2829,
                            2835
                          ],
                          "loc": {
                            "start": {
                              "line": 57,
                              "column": 55
                            },
                            "end": {
                              "line": 57,
                              "column": 61
                            }
                          }
                        }
                      ],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "Identifier",
                                  "name": "pipe",
                                  "range": [
                                    2859,
                                    2863
                                  ],
                                  "loc": {
                                    "start": {
                                      "line": 58,
                                      "column": 19
                                    },
                                    "end": {
                                      "line": 58,
                                      "column": 23
                                    }
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "Identifier",
                                      "name": "scan",
                                      "range": [
                                        2864,
                                        2868
                                      ],
                                      "loc": {
                                        "start": {
                                          "line": 58,
                                          "column": 24
                                        },
                                        "end": {
                                          "line": 58,
                                          "column": 28
                                        }
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "Identifier",
                                        "name": "accumulator",
                                        "range": [
                                          2869,
                                          2880
                                        ],
                                        "loc": {
                                          "start": {
                                            "line": 58,
                                            "column": 29
                                          },
                                          "end": {
                                            "line": 58,
                                            "column": 40
                                          }
                                        }
                                      },
                                      {
                                        "type": "Identifier",
                                        "name": "seed",
                                        "range": [
                                          2882,
                                          2886
                                        ],
                                        "loc": {
                                          "start": {
                                            "line": 58,
                                            "column": 42
                                          },
                                          "end": {
                                            "line": 58,
                                            "column": 46
                                          }
                                        }
                                      }
                                    ],
                                    "range": [
                                      2864,
                                      2887
                                    ],
                                    "loc": {
                                      "start": {
                                        "line": 58,
                                        "column": 24
                                      },
                                      "end": {
                                        "line": 58,
                                        "column": 47
                                      }
                                    }
                                  },
                                  {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "Identifier",
                                      "name": "takeLast",
                                      "range": [
                                        2889,
                                        2897
                                      ],
                                      "loc": {
                                        "start": {
                                          "line": 58,
                                          "column": 49
                                        },
                                        "end": {
                                          "line": 58,
                                          "column": 57
                                        }
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "Literal",
                                        "value": 1,
                                        "raw": "1",
                                        "range": [
                                          2898,
                                          2899
                                        ],
                                        "loc": {
                                          "start": {
                                            "line": 58,
                                            "column": 58
                                          },
                                          "end": {
                                            "line": 58,
                                            "column": 59
                                          }
                                        }
                                      }
                                    ],
                                    "range": [
                                      2889,
                                      2900
                                    ],
                                    "loc": {
                                      "start": {
                                        "line": 58,
                                        "column": 49
                                      },
                                      "end": {
                                        "line": 58,
                                        "column": 60
                                      }
                                    }
                                  },
                                  {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "Identifier",
                                      "name": "defaultIfEmpty",
                                      "range": [
                                        2902,
                                        2916
                                      ],
                                      "loc": {
                                        "start": {
                                          "line": 58,
                                          "column": 62
                                        },
                                        "end": {
                                          "line": 58,
                                          "column": 76
                                        }
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "Identifier",
                                        "name": "seed",
                                        "range": [
                                          2917,
                                          2921
                                        ],
                                        "loc": {
                                          "start": {
                                            "line": 58,
                                            "column": 77
                                          },
                                          "end": {
                                            "line": 58,
                                            "column": 81
                                          }
                                        }
                                      }
                                    ],
                                    "range": [
                                      2902,
                                      2922
                                    ],
                                    "loc": {
                                      "start": {
                                        "line": 58,
                                        "column": 62
                                      },
                                      "end": {
                                        "line": 58,
                                        "column": 82
                                      }
                                    }
                                  }
                                ],
                                "range": [
                                  2859,
                                  2923
                                ],
                                "loc": {
                                  "start": {
                                    "line": 58,
                                    "column": 19
                                  },
                                  "end": {
                                    "line": 58,
                                    "column": 83
                                  }
                                }
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "source",
                                  "range": [
                                    2924,
                                    2930
                                  ],
                                  "loc": {
                                    "start": {
                                      "line": 58,
                                      "column": 84
                                    },
                                    "end": {
                                      "line": 58,
                                      "column": 90
                                    }
                                  }
                                }
                              ],
                              "range": [
                                2859,
                                2931
                              ],
                              "loc": {
                                "start": {
                                  "line": 58,
                                  "column": 19
                                },
                                "end": {
                                  "line": 58,
                                  "column": 91
                                }
                              }
                            },
                            "range": [
                              2852,
                              2932
                            ],
                            "loc": {
                              "start": {
                                "line": 58,
                                "column": 12
                              },
                              "end": {
                                "line": 58,
                                "column": 92
                              }
                            }
                          }
                        ],
                        "range": [
                          2837,
                          2943
                        ],
                        "loc": {
                          "start": {
                            "line": 57,
                            "column": 63
                          },
                          "end": {
                            "line": 59,
                            "column": 9
                          }
                        }
                      },
                      "generator": false,
                      "expression": false,
                      "range": [
                        2789,
                        2943
                      ],
                      "loc": {
                        "start": {
                          "line": 57,
                          "column": 15
                        },
                        "end": {
                          "line": 59,
                          "column": 9
                        }
                      }
                    },
                    "range": [
                      2782,
                      2944
                    ],
                    "loc": {
                      "start": {
                        "line": 57,
                        "column": 8
                      },
                      "end": {
                        "line": 59,
                        "column": 10
                      }
                    }
                  }
                ],
                "range": [
                  2771,
                  2951
                ],
                "loc": {
                  "start": {
                    "line": 56,
                    "column": 31
                  },
                  "end": {
                    "line": 60,
                    "column": 5
                  }
                }
              },
              "alternate": null,
              "range": [
                2744,
                2951
              ],
              "loc": {
                "start": {
                  "line": 56,
                  "column": 4
                },
                "end": {
                  "line": 60,
                  "column": 5
                }
              },
              "leadingComments": [
                {
                  "type": "Line",
                  "value": " providing a seed of `undefined` *should* be valid and trigger",
                  "range": [
                    2380,
                    2444
                  ],
                  "loc": {
                    "start": {
                      "line": 51,
                      "column": 4
                    },
                    "end": {
                      "line": 51,
                      "column": 68
                    }
                  }
                },
                {
                  "type": "Line",
                  "value": " hasSeed! so don't use `seed !== undefined` checks!",
                  "range": [
                    2450,
                    2503
                  ],
                  "loc": {
                    "start": {
                      "line": 52,
                      "column": 4
                    },
                    "end": {
                      "line": 52,
                      "column": 57
                    }
                  }
                },
                {
                  "type": "Line",
                  "value": " For this reason, we have to check it here at the original call site",
                  "range": [
                    2509,
                    2579
                  ],
                  "loc": {
                    "start": {
                      "line": 53,
                      "column": 4
                    },
                    "end": {
                      "line": 53,
                      "column": 74
                    }
                  }
                },
                {
                  "type": "Line",
                  "value": " otherwise inside Operator/Subscriber we won't know if `undefined`",
                  "range": [
                    2585,
                    2653
                  ],
                  "loc": {
                    "start": {
                      "line": 54,
                      "column": 4
                    },
                    "end": {
                      "line": 54,
                      "column": 72
                    }
                  }
                },
                {
                  "type": "Line",
                  "value": " means they didn't provide anything or if they literally provided `undefined`",
                  "range": [
                    2659,
                    2738
                  ],
                  "loc": {
                    "start": {
                      "line": 55,
                      "column": 4
                    },
                    "end": {
                      "line": 55,
                      "column": 83
                    }
                  }
                }
              ]
            },
            {
              "type": "ReturnStatement",
              "argument": {
                "type": "FunctionExpression",
                "id": {
                  "type": "Identifier",
                  "name": "reduceOperatorFunction",
                  "range": [
                    2973,
                    2995
                  ],
                  "loc": {
                    "start": {
                      "line": 61,
                      "column": 20
                    },
                    "end": {
                      "line": 61,
                      "column": 42
                    }
                  }
                },
                "params": [
                  {
                    "type": "Identifier",
                    "name": "source",
                    "range": [
                      2996,
                      3002
                    ],
                    "loc": {
                      "start": {
                        "line": 61,
                        "column": 43
                      },
                      "end": {
                        "line": 61,
                        "column": 49
                      }
                    }
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ReturnStatement",
                      "argument": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "pipe",
                            "range": [
                              3022,
                              3026
                            ],
                            "loc": {
                              "start": {
                                "line": 62,
                                "column": 15
                              },
                              "end": {
                                "line": 62,
                                "column": 19
                              }
                            }
                          },
                          "arguments": [
                            {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "scan",
                                "range": [
                                  3027,
                                  3031
                                ],
                                "loc": {
                                  "start": {
                                    "line": 62,
                                    "column": 20
                                  },
                                  "end": {
                                    "line": 62,
                                    "column": 24
                                  }
                                }
                              },
                              "arguments": [
                                {
                                  "type": "ArrowFunctionExpression",
                                  "id": null,
                                  "params": [
                                    {
                                      "type": "Identifier",
                                      "name": "acc",
                                      "range": [
                                        3033,
                                        3036
                                      ],
                                      "loc": {
                                        "start": {
                                          "line": 62,
                                          "column": 26
                                        },
                                        "end": {
                                          "line": 62,
                                          "column": 29
                                        }
                                      }
                                    },
                                    {
                                      "type": "Identifier",
                                      "name": "value",
                                      "range": [
                                        3038,
                                        3043
                                      ],
                                      "loc": {
                                        "start": {
                                          "line": 62,
                                          "column": 31
                                        },
                                        "end": {
                                          "line": 62,
                                          "column": 36
                                        }
                                      }
                                    },
                                    {
                                      "type": "Identifier",
                                      "name": "index",
                                      "range": [
                                        3045,
                                        3050
                                      ],
                                      "loc": {
                                        "start": {
                                          "line": 62,
                                          "column": 38
                                        },
                                        "end": {
                                          "line": 62,
                                          "column": 43
                                        }
                                      }
                                    }
                                  ],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "Identifier",
                                            "name": "accumulator",
                                            "range": [
                                              3077,
                                              3088
                                            ],
                                            "loc": {
                                              "start": {
                                                "line": 63,
                                                "column": 19
                                              },
                                              "end": {
                                                "line": 63,
                                                "column": 30
                                              }
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Identifier",
                                              "name": "acc",
                                              "range": [
                                                3089,
                                                3092
                                              ],
                                              "loc": {
                                                "start": {
                                                  "line": 63,
                                                  "column": 31
                                                },
                                                "end": {
                                                  "line": 63,
                                                  "column": 34
                                                }
                                              }
                                            },
                                            {
                                              "type": "Identifier",
                                              "name": "value",
                                              "range": [
                                                3094,
                                                3099
                                              ],
                                              "loc": {
                                                "start": {
                                                  "line": 63,
                                                  "column": 36
                                                },
                                                "end": {
                                                  "line": 63,
                                                  "column": 41
                                                }
                                              }
                                            },
                                            {
                                              "type": "BinaryExpression",
                                              "operator": "+",
                                              "left": {
                                                "type": "Identifier",
                                                "name": "index",
                                                "range": [
                                                  3101,
                                                  3106
                                                ],
                                                "loc": {
                                                  "start": {
                                                    "line": 63,
                                                    "column": 43
                                                  },
                                                  "end": {
                                                    "line": 63,
                                                    "column": 48
                                                  }
                                                }
                                              },
                                              "right": {
                                                "type": "Literal",
                                                "value": 1,
                                                "raw": "1",
                                                "range": [
                                                  3109,
                                                  3110
                                                ],
                                                "loc": {
                                                  "start": {
                                                    "line": 63,
                                                    "column": 51
                                                  },
                                                  "end": {
                                                    "line": 63,
                                                    "column": 52
                                                  }
                                                }
                                              },
                                              "range": [
                                                3101,
                                                3110
                                              ],
                                              "loc": {
                                                "start": {
                                                  "line": 63,
                                                  "column": 43
                                                },
                                                "end": {
                                                  "line": 63,
                                                  "column": 52
                                                }
                                              }
                                            }
                                          ],
                                          "range": [
                                            3077,
                                            3111
                                          ],
                                          "loc": {
                                            "start": {
                                              "line": 63,
                                              "column": 19
                                            },
                                            "end": {
                                              "line": 63,
                                              "column": 53
                                            }
                                          }
                                        },
                                        "range": [
                                          3070,
                                          3112
                                        ],
                                        "loc": {
                                          "start": {
                                            "line": 63,
                                            "column": 12
                                          },
                                          "end": {
                                            "line": 63,
                                            "column": 54
                                          }
                                        }
                                      }
                                    ],
                                    "range": [
                                      3055,
                                      3123
                                    ],
                                    "loc": {
                                      "start": {
                                        "line": 62,
                                        "column": 48
                                      },
                                      "end": {
                                        "line": 64,
                                        "column": 9
                                      }
                                    }
                                  },
                                  "generator": false,
                                  "expression": false,
                                  "range": [
                                    3032,
                                    3123
                                  ],
                                  "loc": {
                                    "start": {
                                      "line": 62,
                                      "column": 25
                                    },
                                    "end": {
                                      "line": 64,
                                      "column": 9
                                    }
                                  }
                                }
                              ],
                              "range": [
                                3027,
                                3124
                              ],
                              "loc": {
                                "start": {
                                  "line": 62,
                                  "column": 20
                                },
                                "end": {
                                  "line": 64,
                                  "column": 10
                                }
                              }
                            },
                            {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "takeLast",
                                "range": [
                                  3126,
                                  3134
                                ],
                                "loc": {
                                  "start": {
                                    "line": 64,
                                    "column": 12
                                  },
                                  "end": {
                                    "line": 64,
                                    "column": 20
                                  }
                                }
                              },
                              "arguments": [
                                {
                                  "type": "Literal",
                                  "value": 1,
                                  "raw": "1",
                                  "range": [
                                    3135,
                                    3136
                                  ],
                                  "loc": {
                                    "start": {
                                      "line": 64,
                                      "column": 21
                                    },
                                    "end": {
                                      "line": 64,
                                      "column": 22
                                    }
                                  }
                                }
                              ],
                              "range": [
                                3126,
                                3137
                              ],
                              "loc": {
                                "start": {
                                  "line": 64,
                                  "column": 12
                                },
                                "end": {
                                  "line": 64,
                                  "column": 23
                                }
                              }
                            }
                          ],
                          "range": [
                            3022,
                            3138
                          ],
                          "loc": {
                            "start": {
                              "line": 62,
                              "column": 15
                            },
                            "end": {
                              "line": 64,
                              "column": 24
                            }
                          }
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "source",
                            "range": [
                              3139,
                              3145
                            ],
                            "loc": {
                              "start": {
                                "line": 64,
                                "column": 25
                              },
                              "end": {
                                "line": 64,
                                "column": 31
                              }
                            }
                          }
                        ],
                        "range": [
                          3022,
                          3146
                        ],
                        "loc": {
                          "start": {
                            "line": 62,
                            "column": 15
                          },
                          "end": {
                            "line": 64,
                            "column": 32
                          }
                        }
                      },
                      "range": [
                        3015,
                        3147
                      ],
                      "loc": {
                        "start": {
                          "line": 62,
                          "column": 8
                        },
                        "end": {
                          "line": 64,
                          "column": 33
                        }
                      }
                    }
                  ],
                  "range": [
                    3004,
                    3154
                  ],
                  "loc": {
                    "start": {
                      "line": 61,
                      "column": 51
                    },
                    "end": {
                      "line": 65,
                      "column": 5
                    }
                  }
                },
                "generator": false,
                "expression": false,
                "range": [
                  2964,
                  3154
                ],
                "loc": {
                  "start": {
                    "line": 61,
                    "column": 11
                  },
                  "end": {
                    "line": 65,
                    "column": 5
                  }
                }
              },
              "range": [
                2957,
                3155
              ],
              "loc": {
                "start": {
                  "line": 61,
                  "column": 4
                },
                "end": {
                  "line": 65,
                  "column": 6
                }
              }
            }
          ],
          "range": [
            2373,
            3158
          ],
          "loc": {
            "start": {
              "line": 50,
              "column": 42
            },
            "end": {
              "line": 66,
              "column": 1
            }
          }
        },
        "generator": false,
        "expression": false,
        "range": [
          2338,
          3158
        ],
        "loc": {
          "start": {
            "line": 50,
            "column": 7
          },
          "end": {
            "line": 66,
            "column": 1
          }
        },
        "leadingComments": [
          {
            "type": "Block",
            "value": " tslint:enable:max-line-length ",
            "range": [
              162,
              197
            ],
            "loc": {
              "start": {
                "line": 5,
                "column": 0
              },
              "end": {
                "line": 5,
                "column": 35
              }
            }
          },
          {
            "type": "Block",
            "value": "*\r\n * Applies an accumulator function over the source Observable, and returns the\r\n * accumulated result when the source completes, given an optional seed value.\r\n *\r\n * <span class=\"informal\">Combines together all values emitted on the source,\r\n * using an accumulator function that knows how to join a new source value into\r\n * the accumulation from the past.</span>\r\n *\r\n * <img src=\"./img/reduce.png\" width=\"100%\">\r\n *\r\n * Like\r\n * [Array.prototype.reduce()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce),\r\n * `reduce` applies an `accumulator` function against an accumulation and each\r\n * value of the source Observable (from the past) to reduce it to a single\r\n * value, emitted on the output Observable. Note that `reduce` will only emit\r\n * one value, only when the source Observable completes. It is equivalent to\r\n * applying operator {@link scan} followed by operator {@link last}.\r\n *\r\n * Returns an Observable that applies a specified `accumulator` function to each\r\n * item emitted by the source Observable. If a `seed` value is specified, then\r\n * that value will be used as the initial value for the accumulator. If no seed\r\n * value is specified, the first item of the source is used as the seed.\r\n *\r\n * @example <caption>Count the number of click events that happened in 5 seconds</caption>\r\n * var clicksInFiveSeconds = Rx.Observable.fromEvent(document, 'click')\r\n *   .takeUntil(Rx.Observable.interval(5000));\r\n * var ones = clicksInFiveSeconds.mapTo(1);\r\n * var seed = 0;\r\n * var count = ones.reduce((acc, one) => acc + one, seed);\r\n * count.subscribe(x => console.log(x));\r\n *\r\n * @see {@link count}\r\n * @see {@link expand}\r\n * @see {@link mergeScan}\r\n * @see {@link scan}\r\n *\r\n * @param {function(acc: R, value: T, index: number): R} accumulator The accumulator function\r\n * called on each source value.\r\n * @param {R} [seed] The initial accumulation value.\r\n * @return {Observable<R>} An Observable that emits a single value that is the\r\n * result of accumulating the values emitted by the source Observable.\r\n * @method reduce\r\n * @owner Observable\r\n ",
            "range": [
              199,
              2329
            ],
            "loc": {
              "start": {
                "line": 6,
                "column": 0
              },
              "end": {
                "line": 49,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "Line",
            "value": "# sourceMappingURL=reduce.js.map",
            "range": [
              3160,
              3194
            ],
            "loc": {
              "start": {
                "line": 67,
                "column": 0
              },
              "end": {
                "line": 67,
                "column": 34
              }
            }
          }
        ]
      },
      "specifiers": [],
      "source": null,
      "range": [
        2331,
        3158
      ],
      "loc": {
        "start": {
          "line": 50,
          "column": 0
        },
        "end": {
          "line": 66,
          "column": 1
        }
      },
      "leadingComments": [
        {
          "type": "Block",
          "value": " tslint:enable:max-line-length ",
          "range": [
            162,
            197
          ],
          "loc": {
            "start": {
              "line": 5,
              "column": 0
            },
            "end": {
              "line": 5,
              "column": 35
            }
          }
        },
        {
          "type": "Block",
          "value": "*\r\n * Applies an accumulator function over the source Observable, and returns the\r\n * accumulated result when the source completes, given an optional seed value.\r\n *\r\n * <span class=\"informal\">Combines together all values emitted on the source,\r\n * using an accumulator function that knows how to join a new source value into\r\n * the accumulation from the past.</span>\r\n *\r\n * <img src=\"./img/reduce.png\" width=\"100%\">\r\n *\r\n * Like\r\n * [Array.prototype.reduce()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce),\r\n * `reduce` applies an `accumulator` function against an accumulation and each\r\n * value of the source Observable (from the past) to reduce it to a single\r\n * value, emitted on the output Observable. Note that `reduce` will only emit\r\n * one value, only when the source Observable completes. It is equivalent to\r\n * applying operator {@link scan} followed by operator {@link last}.\r\n *\r\n * Returns an Observable that applies a specified `accumulator` function to each\r\n * item emitted by the source Observable. If a `seed` value is specified, then\r\n * that value will be used as the initial value for the accumulator. If no seed\r\n * value is specified, the first item of the source is used as the seed.\r\n *\r\n * @example <caption>Count the number of click events that happened in 5 seconds</caption>\r\n * var clicksInFiveSeconds = Rx.Observable.fromEvent(document, 'click')\r\n *   .takeUntil(Rx.Observable.interval(5000));\r\n * var ones = clicksInFiveSeconds.mapTo(1);\r\n * var seed = 0;\r\n * var count = ones.reduce((acc, one) => acc + one, seed);\r\n * count.subscribe(x => console.log(x));\r\n *\r\n * @see {@link count}\r\n * @see {@link expand}\r\n * @see {@link mergeScan}\r\n * @see {@link scan}\r\n *\r\n * @param {function(acc: R, value: T, index: number): R} accumulator The accumulator function\r\n * called on each source value.\r\n * @param {R} [seed] The initial accumulation value.\r\n * @return {Observable<R>} An Observable that emits a single value that is the\r\n * result of accumulating the values emitted by the source Observable.\r\n * @method reduce\r\n * @owner Observable\r\n ",
          "range": [
            199,
            2329
          ],
          "loc": {
            "start": {
              "line": 6,
              "column": 0
            },
            "end": {
              "line": 49,
              "column": 3
            }
          }
        }
      ],
      "trailingComments": [
        {
          "type": "Line",
          "value": "# sourceMappingURL=reduce.js.map",
          "range": [
            3160,
            3194
          ],
          "loc": {
            "start": {
              "line": 67,
              "column": 0
            },
            "end": {
              "line": 67,
              "column": 34
            }
          }
        }
      ]
    }
  ],
  "sourceType": "module",
  "range": [
    0,
    3158
  ],
  "loc": {
    "start": {
      "line": 1,
      "column": 0
    },
    "end": {
      "line": 66,
      "column": 1
    }
  },
  "comments": [
    {
      "type": "Block",
      "value": " tslint:enable:max-line-length ",
      "range": [
        162,
        197
      ],
      "loc": {
        "start": {
          "line": 5,
          "column": 0
        },
        "end": {
          "line": 5,
          "column": 35
        }
      }
    },
    {
      "type": "Block",
      "value": "*\r\n * Applies an accumulator function over the source Observable, and returns the\r\n * accumulated result when the source completes, given an optional seed value.\r\n *\r\n * <span class=\"informal\">Combines together all values emitted on the source,\r\n * using an accumulator function that knows how to join a new source value into\r\n * the accumulation from the past.</span>\r\n *\r\n * <img src=\"./img/reduce.png\" width=\"100%\">\r\n *\r\n * Like\r\n * [Array.prototype.reduce()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce),\r\n * `reduce` applies an `accumulator` function against an accumulation and each\r\n * value of the source Observable (from the past) to reduce it to a single\r\n * value, emitted on the output Observable. Note that `reduce` will only emit\r\n * one value, only when the source Observable completes. It is equivalent to\r\n * applying operator {@link scan} followed by operator {@link last}.\r\n *\r\n * Returns an Observable that applies a specified `accumulator` function to each\r\n * item emitted by the source Observable. If a `seed` value is specified, then\r\n * that value will be used as the initial value for the accumulator. If no seed\r\n * value is specified, the first item of the source is used as the seed.\r\n *\r\n * @example <caption>Count the number of click events that happened in 5 seconds</caption>\r\n * var clicksInFiveSeconds = Rx.Observable.fromEvent(document, 'click')\r\n *   .takeUntil(Rx.Observable.interval(5000));\r\n * var ones = clicksInFiveSeconds.mapTo(1);\r\n * var seed = 0;\r\n * var count = ones.reduce((acc, one) => acc + one, seed);\r\n * count.subscribe(x => console.log(x));\r\n *\r\n * @see {@link count}\r\n * @see {@link expand}\r\n * @see {@link mergeScan}\r\n * @see {@link scan}\r\n *\r\n * @param {function(acc: R, value: T, index: number): R} accumulator The accumulator function\r\n * called on each source value.\r\n * @param {R} [seed] The initial accumulation value.\r\n * @return {Observable<R>} An Observable that emits a single value that is the\r\n * result of accumulating the values emitted by the source Observable.\r\n * @method reduce\r\n * @owner Observable\r\n ",
      "range": [
        199,
        2329
      ],
      "loc": {
        "start": {
          "line": 6,
          "column": 0
        },
        "end": {
          "line": 49,
          "column": 3
        }
      }
    },
    {
      "type": "Line",
      "value": " providing a seed of `undefined` *should* be valid and trigger",
      "range": [
        2380,
        2444
      ],
      "loc": {
        "start": {
          "line": 51,
          "column": 4
        },
        "end": {
          "line": 51,
          "column": 68
        }
      }
    },
    {
      "type": "Line",
      "value": " hasSeed! so don't use `seed !== undefined` checks!",
      "range": [
        2450,
        2503
      ],
      "loc": {
        "start": {
          "line": 52,
          "column": 4
        },
        "end": {
          "line": 52,
          "column": 57
        }
      }
    },
    {
      "type": "Line",
      "value": " For this reason, we have to check it here at the original call site",
      "range": [
        2509,
        2579
      ],
      "loc": {
        "start": {
          "line": 53,
          "column": 4
        },
        "end": {
          "line": 53,
          "column": 74
        }
      }
    },
    {
      "type": "Line",
      "value": " otherwise inside Operator/Subscriber we won't know if `undefined`",
      "range": [
        2585,
        2653
      ],
      "loc": {
        "start": {
          "line": 54,
          "column": 4
        },
        "end": {
          "line": 54,
          "column": 72
        }
      }
    },
    {
      "type": "Line",
      "value": " means they didn't provide anything or if they literally provided `undefined`",
      "range": [
        2659,
        2738
      ],
      "loc": {
        "start": {
          "line": 55,
          "column": 4
        },
        "end": {
          "line": 55,
          "column": 83
        }
      }
    },
    {
      "type": "Line",
      "value": "# sourceMappingURL=reduce.js.map",
      "range": [
        3160,
        3194
      ],
      "loc": {
        "start": {
          "line": 67,
          "column": 0
        },
        "end": {
          "line": 67,
          "column": 34
        }
      }
    }
  ]
}