{
  "type": "Program",
  "body": [
    {
      "type": "ImportDeclaration",
      "specifiers": [
        {
          "type": "ImportSpecifier",
          "local": {
            "type": "Identifier",
            "name": "finalize",
            "range": [
              9,
              17
            ],
            "loc": {
              "start": {
                "line": 1,
                "column": 9
              },
              "end": {
                "line": 1,
                "column": 17
              }
            }
          },
          "imported": {
            "type": "Identifier",
            "name": "finalize",
            "range": [
              9,
              17
            ],
            "loc": {
              "start": {
                "line": 1,
                "column": 9
              },
              "end": {
                "line": 1,
                "column": 17
              }
            }
          },
          "range": [
            9,
            17
          ],
          "loc": {
            "start": {
              "line": 1,
              "column": 9
            },
            "end": {
              "line": 1,
              "column": 17
            }
          }
        }
      ],
      "source": {
        "type": "Literal",
        "value": "../operators",
        "raw": "'../operators'",
        "range": [
          25,
          39
        ],
        "loc": {
          "start": {
            "line": 1,
            "column": 25
          },
          "end": {
            "line": 1,
            "column": 39
          }
        }
      },
      "range": [
        0,
        40
      ],
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 1,
          "column": 40
        }
      },
      "trailingComments": [
        {
          "type": "Block",
          "value": "*\r\n * Returns an Observable that mirrors the source Observable, but will call a specified function when\r\n * the source terminates on complete or error.\r\n * @param {function} callback Function to be called when source terminates.\r\n * @return {Observable} An Observable that mirrors the source, but will call the specified function on termination.\r\n * @method finally\r\n * @owner Observable\r\n ",
          "range": [
            42,
            436
          ],
          "loc": {
            "start": {
              "line": 2,
              "column": 0
            },
            "end": {
              "line": 9,
              "column": 3
            }
          }
        }
      ]
    },
    {
      "type": "ExportNamedDeclaration",
      "declaration": {
        "type": "FunctionDeclaration",
        "id": {
          "type": "Identifier",
          "name": "_finally",
          "range": [
            454,
            462
          ],
          "loc": {
            "start": {
              "line": 10,
              "column": 16
            },
            "end": {
              "line": 10,
              "column": 24
            }
          }
        },
        "params": [
          {
            "type": "Identifier",
            "name": "callback",
            "range": [
              463,
              471
            ],
            "loc": {
              "start": {
                "line": 10,
                "column": 25
              },
              "end": {
                "line": 10,
                "column": 33
              }
            }
          }
        ],
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "ReturnStatement",
              "argument": {
                "type": "CallExpression",
                "callee": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "finalize",
                    "range": [
                      487,
                      495
                    ],
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 11
                      },
                      "end": {
                        "line": 11,
                        "column": 19
                      }
                    }
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "callback",
                      "range": [
                        496,
                        504
                      ],
                      "loc": {
                        "start": {
                          "line": 11,
                          "column": 20
                        },
                        "end": {
                          "line": 11,
                          "column": 28
                        }
                      }
                    }
                  ],
                  "range": [
                    487,
                    505
                  ],
                  "loc": {
                    "start": {
                      "line": 11,
                      "column": 11
                    },
                    "end": {
                      "line": 11,
                      "column": 29
                    }
                  }
                },
                "arguments": [
                  {
                    "type": "ThisExpression",
                    "range": [
                      506,
                      510
                    ],
                    "loc": {
                      "start": {
                        "line": 11,
                        "column": 30
                      },
                      "end": {
                        "line": 11,
                        "column": 34
                      }
                    }
                  }
                ],
                "range": [
                  487,
                  511
                ],
                "loc": {
                  "start": {
                    "line": 11,
                    "column": 11
                  },
                  "end": {
                    "line": 11,
                    "column": 35
                  }
                }
              },
              "range": [
                480,
                512
              ],
              "loc": {
                "start": {
                  "line": 11,
                  "column": 4
                },
                "end": {
                  "line": 11,
                  "column": 36
                }
              }
            }
          ],
          "range": [
            473,
            515
          ],
          "loc": {
            "start": {
              "line": 10,
              "column": 35
            },
            "end": {
              "line": 12,
              "column": 1
            }
          }
        },
        "generator": false,
        "expression": false,
        "range": [
          445,
          515
        ],
        "loc": {
          "start": {
            "line": 10,
            "column": 7
          },
          "end": {
            "line": 12,
            "column": 1
          }
        },
        "leadingComments": [
          {
            "type": "Block",
            "value": "*\r\n * Returns an Observable that mirrors the source Observable, but will call a specified function when\r\n * the source terminates on complete or error.\r\n * @param {function} callback Function to be called when source terminates.\r\n * @return {Observable} An Observable that mirrors the source, but will call the specified function on termination.\r\n * @method finally\r\n * @owner Observable\r\n ",
            "range": [
              42,
              436
            ],
            "loc": {
              "start": {
                "line": 2,
                "column": 0
              },
              "end": {
                "line": 9,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "Line",
            "value": "# sourceMappingURL=finally.js.map",
            "range": [
              517,
              552
            ],
            "loc": {
              "start": {
                "line": 13,
                "column": 0
              },
              "end": {
                "line": 13,
                "column": 35
              }
            }
          }
        ]
      },
      "specifiers": [],
      "source": null,
      "range": [
        438,
        515
      ],
      "loc": {
        "start": {
          "line": 10,
          "column": 0
        },
        "end": {
          "line": 12,
          "column": 1
        }
      },
      "leadingComments": [
        {
          "type": "Block",
          "value": "*\r\n * Returns an Observable that mirrors the source Observable, but will call a specified function when\r\n * the source terminates on complete or error.\r\n * @param {function} callback Function to be called when source terminates.\r\n * @return {Observable} An Observable that mirrors the source, but will call the specified function on termination.\r\n * @method finally\r\n * @owner Observable\r\n ",
          "range": [
            42,
            436
          ],
          "loc": {
            "start": {
              "line": 2,
              "column": 0
            },
            "end": {
              "line": 9,
              "column": 3
            }
          }
        }
      ],
      "trailingComments": [
        {
          "type": "Line",
          "value": "# sourceMappingURL=finally.js.map",
          "range": [
            517,
            552
          ],
          "loc": {
            "start": {
              "line": 13,
              "column": 0
            },
            "end": {
              "line": 13,
              "column": 35
            }
          }
        }
      ]
    }
  ],
  "sourceType": "module",
  "range": [
    0,
    515
  ],
  "loc": {
    "start": {
      "line": 1,
      "column": 0
    },
    "end": {
      "line": 12,
      "column": 1
    }
  },
  "comments": [
    {
      "type": "Block",
      "value": "*\r\n * Returns an Observable that mirrors the source Observable, but will call a specified function when\r\n * the source terminates on complete or error.\r\n * @param {function} callback Function to be called when source terminates.\r\n * @return {Observable} An Observable that mirrors the source, but will call the specified function on termination.\r\n * @method finally\r\n * @owner Observable\r\n ",
      "range": [
        42,
        436
      ],
      "loc": {
        "start": {
          "line": 2,
          "column": 0
        },
        "end": {
          "line": 9,
          "column": 3
        }
      }
    },
    {
      "type": "Line",
      "value": "# sourceMappingURL=finally.js.map",
      "range": [
        517,
        552
      ],
      "loc": {
        "start": {
          "line": 13,
          "column": 0
        },
        "end": {
          "line": 13,
          "column": 35
        }
      }
    }
  ]
}