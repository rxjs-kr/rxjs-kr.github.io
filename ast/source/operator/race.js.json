{
  "type": "Program",
  "body": [
    {
      "type": "ImportDeclaration",
      "specifiers": [
        {
          "type": "ImportSpecifier",
          "local": {
            "type": "Identifier",
            "name": "higherOrder",
            "range": [
              17,
              28
            ],
            "loc": {
              "start": {
                "line": 1,
                "column": 17
              },
              "end": {
                "line": 1,
                "column": 28
              }
            }
          },
          "imported": {
            "type": "Identifier",
            "name": "race",
            "range": [
              9,
              13
            ],
            "loc": {
              "start": {
                "line": 1,
                "column": 9
              },
              "end": {
                "line": 1,
                "column": 13
              }
            }
          },
          "range": [
            9,
            28
          ],
          "loc": {
            "start": {
              "line": 1,
              "column": 9
            },
            "end": {
              "line": 1,
              "column": 28
            }
          }
        }
      ],
      "source": {
        "type": "Literal",
        "value": "../operators",
        "raw": "'../operators'",
        "range": [
          36,
          50
        ],
        "loc": {
          "start": {
            "line": 1,
            "column": 36
          },
          "end": {
            "line": 1,
            "column": 50
          }
        }
      },
      "range": [
        0,
        51
      ],
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 1,
          "column": 51
        }
      },
      "trailingComments": [
        {
          "type": "Line",
          "value": " NOTE: to support backwards compatability with 5.4.* and lower",
          "range": [
            53,
            117
          ],
          "loc": {
            "start": {
              "line": 2,
              "column": 0
            },
            "end": {
              "line": 2,
              "column": 64
            }
          }
        }
      ]
    },
    {
      "type": "ExportNamedDeclaration",
      "declaration": null,
      "specifiers": [
        {
          "type": "ExportSpecifier",
          "exported": {
            "type": "Identifier",
            "name": "raceStatic",
            "range": [
              136,
              146
            ],
            "loc": {
              "start": {
                "line": 3,
                "column": 17
              },
              "end": {
                "line": 3,
                "column": 27
              }
            }
          },
          "local": {
            "type": "Identifier",
            "name": "race",
            "range": [
              128,
              132
            ],
            "loc": {
              "start": {
                "line": 3,
                "column": 9
              },
              "end": {
                "line": 3,
                "column": 13
              }
            }
          },
          "range": [
            128,
            146
          ],
          "loc": {
            "start": {
              "line": 3,
              "column": 9
            },
            "end": {
              "line": 3,
              "column": 27
            }
          }
        }
      ],
      "source": {
        "type": "Literal",
        "value": "../observable/race",
        "raw": "'../observable/race'",
        "range": [
          154,
          174
        ],
        "loc": {
          "start": {
            "line": 3,
            "column": 35
          },
          "end": {
            "line": 3,
            "column": 55
          }
        }
      },
      "range": [
        119,
        175
      ],
      "loc": {
        "start": {
          "line": 3,
          "column": 0
        },
        "end": {
          "line": 3,
          "column": 56
        }
      },
      "leadingComments": [
        {
          "type": "Line",
          "value": " NOTE: to support backwards compatability with 5.4.* and lower",
          "range": [
            53,
            117
          ],
          "loc": {
            "start": {
              "line": 2,
              "column": 0
            },
            "end": {
              "line": 2,
              "column": 64
            }
          }
        }
      ],
      "trailingComments": [
        {
          "type": "Block",
          "value": " tslint:enable:max-line-length ",
          "range": [
            177,
            212
          ],
          "loc": {
            "start": {
              "line": 4,
              "column": 0
            },
            "end": {
              "line": 4,
              "column": 35
            }
          }
        },
        {
          "type": "Block",
          "value": "*\r\n * Returns an Observable that mirrors the first source Observable to emit an item\r\n * from the combination of this Observable and supplied Observables.\r\n * @param {...Observables} ...observables Sources used to race for which Observable emits first.\r\n * @return {Observable} An Observable that mirrors the output of the first Observable to emit an item.\r\n * @method race\r\n * @owner Observable\r\n ",
          "range": [
            214,
            616
          ],
          "loc": {
            "start": {
              "line": 5,
              "column": 0
            },
            "end": {
              "line": 12,
              "column": 3
            }
          }
        }
      ]
    },
    {
      "type": "ExportNamedDeclaration",
      "declaration": {
        "type": "FunctionDeclaration",
        "id": {
          "type": "Identifier",
          "name": "race",
          "range": [
            634,
            638
          ],
          "loc": {
            "start": {
              "line": 13,
              "column": 16
            },
            "end": {
              "line": 13,
              "column": 20
            }
          }
        },
        "params": [
          {
            "type": "RestElement",
            "argument": {
              "type": "Identifier",
              "name": "observables",
              "range": [
                642,
                653
              ],
              "loc": {
                "start": {
                  "line": 13,
                  "column": 24
                },
                "end": {
                  "line": 13,
                  "column": 35
                }
              }
            },
            "range": [
              639,
              653
            ],
            "loc": {
              "start": {
                "line": 13,
                "column": 21
              },
              "end": {
                "line": 13,
                "column": 35
              }
            }
          }
        ],
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "ReturnStatement",
              "argument": {
                "type": "CallExpression",
                "callee": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "higherOrder",
                    "range": [
                      669,
                      680
                    ],
                    "loc": {
                      "start": {
                        "line": 14,
                        "column": 11
                      },
                      "end": {
                        "line": 14,
                        "column": 22
                      }
                    }
                  },
                  "arguments": [
                    {
                      "type": "SpreadElement",
                      "argument": {
                        "type": "Identifier",
                        "name": "observables",
                        "range": [
                          684,
                          695
                        ],
                        "loc": {
                          "start": {
                            "line": 14,
                            "column": 26
                          },
                          "end": {
                            "line": 14,
                            "column": 37
                          }
                        }
                      },
                      "range": [
                        681,
                        695
                      ],
                      "loc": {
                        "start": {
                          "line": 14,
                          "column": 23
                        },
                        "end": {
                          "line": 14,
                          "column": 37
                        }
                      }
                    }
                  ],
                  "range": [
                    669,
                    696
                  ],
                  "loc": {
                    "start": {
                      "line": 14,
                      "column": 11
                    },
                    "end": {
                      "line": 14,
                      "column": 38
                    }
                  }
                },
                "arguments": [
                  {
                    "type": "ThisExpression",
                    "range": [
                      697,
                      701
                    ],
                    "loc": {
                      "start": {
                        "line": 14,
                        "column": 39
                      },
                      "end": {
                        "line": 14,
                        "column": 43
                      }
                    }
                  }
                ],
                "range": [
                  669,
                  702
                ],
                "loc": {
                  "start": {
                    "line": 14,
                    "column": 11
                  },
                  "end": {
                    "line": 14,
                    "column": 44
                  }
                }
              },
              "range": [
                662,
                703
              ],
              "loc": {
                "start": {
                  "line": 14,
                  "column": 4
                },
                "end": {
                  "line": 14,
                  "column": 45
                }
              }
            }
          ],
          "range": [
            655,
            706
          ],
          "loc": {
            "start": {
              "line": 13,
              "column": 37
            },
            "end": {
              "line": 15,
              "column": 1
            }
          }
        },
        "generator": false,
        "expression": false,
        "range": [
          625,
          706
        ],
        "loc": {
          "start": {
            "line": 13,
            "column": 7
          },
          "end": {
            "line": 15,
            "column": 1
          }
        },
        "leadingComments": [
          {
            "type": "Block",
            "value": " tslint:enable:max-line-length ",
            "range": [
              177,
              212
            ],
            "loc": {
              "start": {
                "line": 4,
                "column": 0
              },
              "end": {
                "line": 4,
                "column": 35
              }
            }
          },
          {
            "type": "Block",
            "value": "*\r\n * Returns an Observable that mirrors the first source Observable to emit an item\r\n * from the combination of this Observable and supplied Observables.\r\n * @param {...Observables} ...observables Sources used to race for which Observable emits first.\r\n * @return {Observable} An Observable that mirrors the output of the first Observable to emit an item.\r\n * @method race\r\n * @owner Observable\r\n ",
            "range": [
              214,
              616
            ],
            "loc": {
              "start": {
                "line": 5,
                "column": 0
              },
              "end": {
                "line": 12,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "Line",
            "value": "# sourceMappingURL=race.js.map",
            "range": [
              708,
              740
            ],
            "loc": {
              "start": {
                "line": 16,
                "column": 0
              },
              "end": {
                "line": 16,
                "column": 32
              }
            }
          }
        ]
      },
      "specifiers": [],
      "source": null,
      "range": [
        618,
        706
      ],
      "loc": {
        "start": {
          "line": 13,
          "column": 0
        },
        "end": {
          "line": 15,
          "column": 1
        }
      },
      "leadingComments": [
        {
          "type": "Block",
          "value": " tslint:enable:max-line-length ",
          "range": [
            177,
            212
          ],
          "loc": {
            "start": {
              "line": 4,
              "column": 0
            },
            "end": {
              "line": 4,
              "column": 35
            }
          }
        },
        {
          "type": "Block",
          "value": "*\r\n * Returns an Observable that mirrors the first source Observable to emit an item\r\n * from the combination of this Observable and supplied Observables.\r\n * @param {...Observables} ...observables Sources used to race for which Observable emits first.\r\n * @return {Observable} An Observable that mirrors the output of the first Observable to emit an item.\r\n * @method race\r\n * @owner Observable\r\n ",
          "range": [
            214,
            616
          ],
          "loc": {
            "start": {
              "line": 5,
              "column": 0
            },
            "end": {
              "line": 12,
              "column": 3
            }
          }
        }
      ],
      "trailingComments": [
        {
          "type": "Line",
          "value": "# sourceMappingURL=race.js.map",
          "range": [
            708,
            740
          ],
          "loc": {
            "start": {
              "line": 16,
              "column": 0
            },
            "end": {
              "line": 16,
              "column": 32
            }
          }
        }
      ]
    }
  ],
  "sourceType": "module",
  "range": [
    0,
    706
  ],
  "loc": {
    "start": {
      "line": 1,
      "column": 0
    },
    "end": {
      "line": 15,
      "column": 1
    }
  },
  "comments": [
    {
      "type": "Line",
      "value": " NOTE: to support backwards compatability with 5.4.* and lower",
      "range": [
        53,
        117
      ],
      "loc": {
        "start": {
          "line": 2,
          "column": 0
        },
        "end": {
          "line": 2,
          "column": 64
        }
      }
    },
    {
      "type": "Block",
      "value": " tslint:enable:max-line-length ",
      "range": [
        177,
        212
      ],
      "loc": {
        "start": {
          "line": 4,
          "column": 0
        },
        "end": {
          "line": 4,
          "column": 35
        }
      }
    },
    {
      "type": "Block",
      "value": "*\r\n * Returns an Observable that mirrors the first source Observable to emit an item\r\n * from the combination of this Observable and supplied Observables.\r\n * @param {...Observables} ...observables Sources used to race for which Observable emits first.\r\n * @return {Observable} An Observable that mirrors the output of the first Observable to emit an item.\r\n * @method race\r\n * @owner Observable\r\n ",
      "range": [
        214,
        616
      ],
      "loc": {
        "start": {
          "line": 5,
          "column": 0
        },
        "end": {
          "line": 12,
          "column": 3
        }
      }
    },
    {
      "type": "Line",
      "value": "# sourceMappingURL=race.js.map",
      "range": [
        708,
        740
      ],
      "loc": {
        "start": {
          "line": 16,
          "column": 0
        },
        "end": {
          "line": 16,
          "column": 32
        }
      }
    }
  ]
}