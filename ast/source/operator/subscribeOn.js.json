{
  "type": "Program",
  "body": [
    {
      "type": "ImportDeclaration",
      "specifiers": [
        {
          "type": "ImportSpecifier",
          "local": {
            "type": "Identifier",
            "name": "higherOrder",
            "range": [
              24,
              35
            ],
            "loc": {
              "start": {
                "line": 1,
                "column": 24
              },
              "end": {
                "line": 1,
                "column": 35
              }
            }
          },
          "imported": {
            "type": "Identifier",
            "name": "subscribeOn",
            "range": [
              9,
              20
            ],
            "loc": {
              "start": {
                "line": 1,
                "column": 9
              },
              "end": {
                "line": 1,
                "column": 20
              }
            }
          },
          "range": [
            9,
            35
          ],
          "loc": {
            "start": {
              "line": 1,
              "column": 9
            },
            "end": {
              "line": 1,
              "column": 35
            }
          }
        }
      ],
      "source": {
        "type": "Literal",
        "value": "../operators",
        "raw": "'../operators'",
        "range": [
          43,
          57
        ],
        "loc": {
          "start": {
            "line": 1,
            "column": 43
          },
          "end": {
            "line": 1,
            "column": 57
          }
        }
      },
      "range": [
        0,
        58
      ],
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 1,
          "column": 58
        }
      },
      "trailingComments": [
        {
          "type": "Block",
          "value": "*\r\n * Asynchronously subscribes Observers to this Observable on the specified IScheduler.\r\n *\r\n * <img src=\"./img/subscribeOn.png\" width=\"100%\">\r\n *\r\n * @param {Scheduler} scheduler - The IScheduler to perform subscription actions on.\r\n * @return {Observable<T>} The source Observable modified so that its subscriptions happen on the specified IScheduler.\r\n .\r\n * @method subscribeOn\r\n * @owner Observable\r\n ",
          "range": [
            60,
            472
          ],
          "loc": {
            "start": {
              "line": 2,
              "column": 0
            },
            "end": {
              "line": 12,
              "column": 3
            }
          }
        }
      ]
    },
    {
      "type": "ExportNamedDeclaration",
      "declaration": {
        "type": "FunctionDeclaration",
        "id": {
          "type": "Identifier",
          "name": "subscribeOn",
          "range": [
            490,
            501
          ],
          "loc": {
            "start": {
              "line": 13,
              "column": 16
            },
            "end": {
              "line": 13,
              "column": 27
            }
          }
        },
        "params": [
          {
            "type": "Identifier",
            "name": "scheduler",
            "range": [
              502,
              511
            ],
            "loc": {
              "start": {
                "line": 13,
                "column": 28
              },
              "end": {
                "line": 13,
                "column": 37
              }
            }
          },
          {
            "type": "AssignmentPattern",
            "left": {
              "type": "Identifier",
              "name": "delay",
              "range": [
                513,
                518
              ],
              "loc": {
                "start": {
                  "line": 13,
                  "column": 39
                },
                "end": {
                  "line": 13,
                  "column": 44
                }
              }
            },
            "right": {
              "type": "Literal",
              "value": 0,
              "raw": "0",
              "range": [
                521,
                522
              ],
              "loc": {
                "start": {
                  "line": 13,
                  "column": 47
                },
                "end": {
                  "line": 13,
                  "column": 48
                }
              }
            },
            "range": [
              513,
              522
            ],
            "loc": {
              "start": {
                "line": 13,
                "column": 39
              },
              "end": {
                "line": 13,
                "column": 48
              }
            }
          }
        ],
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "ReturnStatement",
              "argument": {
                "type": "CallExpression",
                "callee": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "higherOrder",
                    "range": [
                      538,
                      549
                    ],
                    "loc": {
                      "start": {
                        "line": 14,
                        "column": 11
                      },
                      "end": {
                        "line": 14,
                        "column": 22
                      }
                    }
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "scheduler",
                      "range": [
                        550,
                        559
                      ],
                      "loc": {
                        "start": {
                          "line": 14,
                          "column": 23
                        },
                        "end": {
                          "line": 14,
                          "column": 32
                        }
                      }
                    },
                    {
                      "type": "Identifier",
                      "name": "delay",
                      "range": [
                        561,
                        566
                      ],
                      "loc": {
                        "start": {
                          "line": 14,
                          "column": 34
                        },
                        "end": {
                          "line": 14,
                          "column": 39
                        }
                      }
                    }
                  ],
                  "range": [
                    538,
                    567
                  ],
                  "loc": {
                    "start": {
                      "line": 14,
                      "column": 11
                    },
                    "end": {
                      "line": 14,
                      "column": 40
                    }
                  }
                },
                "arguments": [
                  {
                    "type": "ThisExpression",
                    "range": [
                      568,
                      572
                    ],
                    "loc": {
                      "start": {
                        "line": 14,
                        "column": 41
                      },
                      "end": {
                        "line": 14,
                        "column": 45
                      }
                    }
                  }
                ],
                "range": [
                  538,
                  573
                ],
                "loc": {
                  "start": {
                    "line": 14,
                    "column": 11
                  },
                  "end": {
                    "line": 14,
                    "column": 46
                  }
                }
              },
              "range": [
                531,
                574
              ],
              "loc": {
                "start": {
                  "line": 14,
                  "column": 4
                },
                "end": {
                  "line": 14,
                  "column": 47
                }
              }
            }
          ],
          "range": [
            524,
            577
          ],
          "loc": {
            "start": {
              "line": 13,
              "column": 50
            },
            "end": {
              "line": 15,
              "column": 1
            }
          }
        },
        "generator": false,
        "expression": false,
        "range": [
          481,
          577
        ],
        "loc": {
          "start": {
            "line": 13,
            "column": 7
          },
          "end": {
            "line": 15,
            "column": 1
          }
        },
        "leadingComments": [
          {
            "type": "Block",
            "value": "*\r\n * Asynchronously subscribes Observers to this Observable on the specified IScheduler.\r\n *\r\n * <img src=\"./img/subscribeOn.png\" width=\"100%\">\r\n *\r\n * @param {Scheduler} scheduler - The IScheduler to perform subscription actions on.\r\n * @return {Observable<T>} The source Observable modified so that its subscriptions happen on the specified IScheduler.\r\n .\r\n * @method subscribeOn\r\n * @owner Observable\r\n ",
            "range": [
              60,
              472
            ],
            "loc": {
              "start": {
                "line": 2,
                "column": 0
              },
              "end": {
                "line": 12,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "Line",
            "value": "# sourceMappingURL=subscribeOn.js.map",
            "range": [
              579,
              618
            ],
            "loc": {
              "start": {
                "line": 16,
                "column": 0
              },
              "end": {
                "line": 16,
                "column": 39
              }
            }
          }
        ]
      },
      "specifiers": [],
      "source": null,
      "range": [
        474,
        577
      ],
      "loc": {
        "start": {
          "line": 13,
          "column": 0
        },
        "end": {
          "line": 15,
          "column": 1
        }
      },
      "leadingComments": [
        {
          "type": "Block",
          "value": "*\r\n * Asynchronously subscribes Observers to this Observable on the specified IScheduler.\r\n *\r\n * <img src=\"./img/subscribeOn.png\" width=\"100%\">\r\n *\r\n * @param {Scheduler} scheduler - The IScheduler to perform subscription actions on.\r\n * @return {Observable<T>} The source Observable modified so that its subscriptions happen on the specified IScheduler.\r\n .\r\n * @method subscribeOn\r\n * @owner Observable\r\n ",
          "range": [
            60,
            472
          ],
          "loc": {
            "start": {
              "line": 2,
              "column": 0
            },
            "end": {
              "line": 12,
              "column": 3
            }
          }
        }
      ],
      "trailingComments": [
        {
          "type": "Line",
          "value": "# sourceMappingURL=subscribeOn.js.map",
          "range": [
            579,
            618
          ],
          "loc": {
            "start": {
              "line": 16,
              "column": 0
            },
            "end": {
              "line": 16,
              "column": 39
            }
          }
        }
      ]
    }
  ],
  "sourceType": "module",
  "range": [
    0,
    577
  ],
  "loc": {
    "start": {
      "line": 1,
      "column": 0
    },
    "end": {
      "line": 15,
      "column": 1
    }
  },
  "comments": [
    {
      "type": "Block",
      "value": "*\r\n * Asynchronously subscribes Observers to this Observable on the specified IScheduler.\r\n *\r\n * <img src=\"./img/subscribeOn.png\" width=\"100%\">\r\n *\r\n * @param {Scheduler} scheduler - The IScheduler to perform subscription actions on.\r\n * @return {Observable<T>} The source Observable modified so that its subscriptions happen on the specified IScheduler.\r\n .\r\n * @method subscribeOn\r\n * @owner Observable\r\n ",
      "range": [
        60,
        472
      ],
      "loc": {
        "start": {
          "line": 2,
          "column": 0
        },
        "end": {
          "line": 12,
          "column": 3
        }
      }
    },
    {
      "type": "Line",
      "value": "# sourceMappingURL=subscribeOn.js.map",
      "range": [
        579,
        618
      ],
      "loc": {
        "start": {
          "line": 16,
          "column": 0
        },
        "end": {
          "line": 16,
          "column": 39
        }
      }
    }
  ]
}