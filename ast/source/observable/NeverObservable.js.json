{
  "type": "Program",
  "body": [
    {
      "type": "ImportDeclaration",
      "specifiers": [
        {
          "type": "ImportSpecifier",
          "local": {
            "type": "Identifier",
            "name": "Observable",
            "range": [
              9,
              19
            ],
            "loc": {
              "start": {
                "line": 1,
                "column": 9
              },
              "end": {
                "line": 1,
                "column": 19
              }
            }
          },
          "imported": {
            "type": "Identifier",
            "name": "Observable",
            "range": [
              9,
              19
            ],
            "loc": {
              "start": {
                "line": 1,
                "column": 9
              },
              "end": {
                "line": 1,
                "column": 19
              }
            }
          },
          "range": [
            9,
            19
          ],
          "loc": {
            "start": {
              "line": 1,
              "column": 9
            },
            "end": {
              "line": 1,
              "column": 19
            }
          }
        }
      ],
      "source": {
        "type": "Literal",
        "value": "../Observable",
        "raw": "'../Observable'",
        "range": [
          27,
          42
        ],
        "loc": {
          "start": {
            "line": 1,
            "column": 27
          },
          "end": {
            "line": 1,
            "column": 42
          }
        }
      },
      "range": [
        0,
        43
      ],
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 1,
          "column": 43
        }
      }
    },
    {
      "type": "ImportDeclaration",
      "specifiers": [
        {
          "type": "ImportSpecifier",
          "local": {
            "type": "Identifier",
            "name": "noop",
            "range": [
              54,
              58
            ],
            "loc": {
              "start": {
                "line": 2,
                "column": 9
              },
              "end": {
                "line": 2,
                "column": 13
              }
            }
          },
          "imported": {
            "type": "Identifier",
            "name": "noop",
            "range": [
              54,
              58
            ],
            "loc": {
              "start": {
                "line": 2,
                "column": 9
              },
              "end": {
                "line": 2,
                "column": 13
              }
            }
          },
          "range": [
            54,
            58
          ],
          "loc": {
            "start": {
              "line": 2,
              "column": 9
            },
            "end": {
              "line": 2,
              "column": 13
            }
          }
        }
      ],
      "source": {
        "type": "Literal",
        "value": "../util/noop",
        "raw": "'../util/noop'",
        "range": [
          66,
          80
        ],
        "loc": {
          "start": {
            "line": 2,
            "column": 21
          },
          "end": {
            "line": 2,
            "column": 35
          }
        }
      },
      "range": [
        45,
        81
      ],
      "loc": {
        "start": {
          "line": 2,
          "column": 0
        },
        "end": {
          "line": 2,
          "column": 36
        }
      },
      "trailingComments": [
        {
          "type": "Block",
          "value": "*\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @extends {Ignored}\r\n * @hide true\r\n ",
          "range": [
            83,
            181
          ],
          "loc": {
            "start": {
              "line": 3,
              "column": 0
            },
            "end": {
              "line": 7,
              "column": 3
            }
          }
        }
      ]
    },
    {
      "type": "ExportNamedDeclaration",
      "declaration": {
        "type": "ClassDeclaration",
        "id": {
          "type": "Identifier",
          "name": "NeverObservable",
          "range": [
            196,
            211
          ],
          "loc": {
            "start": {
              "line": 8,
              "column": 13
            },
            "end": {
              "line": 8,
              "column": 28
            }
          }
        },
        "superClass": {
          "type": "Identifier",
          "name": "Observable",
          "range": [
            220,
            230
          ],
          "loc": {
            "start": {
              "line": 8,
              "column": 37
            },
            "end": {
              "line": 8,
              "column": 47
            }
          }
        },
        "body": {
          "type": "ClassBody",
          "body": [
            {
              "type": "MethodDefinition",
              "key": {
                "type": "Identifier",
                "name": "constructor",
                "range": [
                  238,
                  249
                ],
                "loc": {
                  "start": {
                    "line": 9,
                    "column": 4
                  },
                  "end": {
                    "line": 9,
                    "column": 15
                  }
                }
              },
              "value": {
                "type": "FunctionExpression",
                "id": null,
                "params": [],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Super",
                          "range": [
                            263,
                            268
                          ],
                          "loc": {
                            "start": {
                              "line": 10,
                              "column": 8
                            },
                            "end": {
                              "line": 10,
                              "column": 13
                            }
                          }
                        },
                        "arguments": [],
                        "range": [
                          263,
                          270
                        ],
                        "loc": {
                          "start": {
                            "line": 10,
                            "column": 8
                          },
                          "end": {
                            "line": 10,
                            "column": 15
                          }
                        }
                      },
                      "range": [
                        263,
                        271
                      ],
                      "loc": {
                        "start": {
                          "line": 10,
                          "column": 8
                        },
                        "end": {
                          "line": 10,
                          "column": 16
                        }
                      }
                    }
                  ],
                  "range": [
                    252,
                    278
                  ],
                  "loc": {
                    "start": {
                      "line": 9,
                      "column": 18
                    },
                    "end": {
                      "line": 11,
                      "column": 5
                    }
                  }
                },
                "generator": false,
                "expression": false,
                "range": [
                  249,
                  278
                ],
                "loc": {
                  "start": {
                    "line": 9,
                    "column": 15
                  },
                  "end": {
                    "line": 11,
                    "column": 5
                  }
                }
              },
              "kind": "constructor",
              "computed": false,
              "range": [
                238,
                278
              ],
              "loc": {
                "start": {
                  "line": 9,
                  "column": 4
                },
                "end": {
                  "line": 11,
                  "column": 5
                }
              },
              "trailingComments": [
                {
                  "type": "Block",
                  "value": "*\r\n     * Creates an Observable that emits no items to the Observer.\r\n     *\r\n     * <span class=\"informal\">An Observable that never emits anything.</span>\r\n     *\r\n     * <img src=\"./img/never.png\" width=\"100%\">\r\n     *\r\n     * This static operator is useful for creating a simple Observable that emits\r\n     * neither values nor errors nor the completion notification. It can be used\r\n     * for testing purposes or for composing with other Observables. Please note\r\n     * that by never emitting a complete notification, this Observable keeps the\r\n     * subscription from being disposed automatically. Subscriptions need to be\r\n     * manually disposed.\r\n     *\r\n     * @example <caption>Emit the number 7, then never emit anything else (not even complete).</caption>\r\n     * function info() {\r\n     *   console.log('Will not be called');\r\n     * }\r\n     * var result = Rx.Observable.never().startWith(7);\r\n     * result.subscribe(x => console.log(x), info, info);\r\n     *\r\n     * @see {@link create}\r\n     * @see {@link empty}\r\n     * @see {@link of}\r\n     * @see {@link throw}\r\n     *\r\n     * @return {Observable} A \"never\" Observable: never emits anything.\r\n     * @static true\r\n     * @name never\r\n     * @owner Observable\r\n     ",
                  "range": [
                    284,
                    1525
                  ],
                  "loc": {
                    "start": {
                      "line": 12,
                      "column": 4
                    },
                    "end": {
                      "line": 42,
                      "column": 7
                    }
                  }
                }
              ],
              "static": false
            },
            {
              "type": "MethodDefinition",
              "key": {
                "type": "Identifier",
                "name": "create",
                "range": [
                  1538,
                  1544
                ],
                "loc": {
                  "start": {
                    "line": 43,
                    "column": 11
                  },
                  "end": {
                    "line": 43,
                    "column": 17
                  }
                }
              },
              "value": {
                "type": "FunctionExpression",
                "id": null,
                "params": [],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ReturnStatement",
                      "argument": {
                        "type": "NewExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "NeverObservable",
                          "range": [
                            1569,
                            1584
                          ],
                          "loc": {
                            "start": {
                              "line": 44,
                              "column": 19
                            },
                            "end": {
                              "line": 44,
                              "column": 34
                            }
                          }
                        },
                        "arguments": [],
                        "range": [
                          1565,
                          1586
                        ],
                        "loc": {
                          "start": {
                            "line": 44,
                            "column": 15
                          },
                          "end": {
                            "line": 44,
                            "column": 36
                          }
                        }
                      },
                      "range": [
                        1558,
                        1587
                      ],
                      "loc": {
                        "start": {
                          "line": 44,
                          "column": 8
                        },
                        "end": {
                          "line": 44,
                          "column": 37
                        }
                      }
                    }
                  ],
                  "range": [
                    1547,
                    1594
                  ],
                  "loc": {
                    "start": {
                      "line": 43,
                      "column": 20
                    },
                    "end": {
                      "line": 45,
                      "column": 5
                    }
                  }
                },
                "generator": false,
                "expression": false,
                "range": [
                  1544,
                  1594
                ],
                "loc": {
                  "start": {
                    "line": 43,
                    "column": 17
                  },
                  "end": {
                    "line": 45,
                    "column": 5
                  }
                }
              },
              "kind": "method",
              "computed": false,
              "range": [
                1531,
                1594
              ],
              "loc": {
                "start": {
                  "line": 43,
                  "column": 4
                },
                "end": {
                  "line": 45,
                  "column": 5
                }
              },
              "leadingComments": [
                {
                  "type": "Block",
                  "value": "*\r\n     * Creates an Observable that emits no items to the Observer.\r\n     *\r\n     * <span class=\"informal\">An Observable that never emits anything.</span>\r\n     *\r\n     * <img src=\"./img/never.png\" width=\"100%\">\r\n     *\r\n     * This static operator is useful for creating a simple Observable that emits\r\n     * neither values nor errors nor the completion notification. It can be used\r\n     * for testing purposes or for composing with other Observables. Please note\r\n     * that by never emitting a complete notification, this Observable keeps the\r\n     * subscription from being disposed automatically. Subscriptions need to be\r\n     * manually disposed.\r\n     *\r\n     * @example <caption>Emit the number 7, then never emit anything else (not even complete).</caption>\r\n     * function info() {\r\n     *   console.log('Will not be called');\r\n     * }\r\n     * var result = Rx.Observable.never().startWith(7);\r\n     * result.subscribe(x => console.log(x), info, info);\r\n     *\r\n     * @see {@link create}\r\n     * @see {@link empty}\r\n     * @see {@link of}\r\n     * @see {@link throw}\r\n     *\r\n     * @return {Observable} A \"never\" Observable: never emits anything.\r\n     * @static true\r\n     * @name never\r\n     * @owner Observable\r\n     ",
                  "range": [
                    284,
                    1525
                  ],
                  "loc": {
                    "start": {
                      "line": 12,
                      "column": 4
                    },
                    "end": {
                      "line": 42,
                      "column": 7
                    }
                  }
                }
              ],
              "static": true
            },
            {
              "type": "MethodDefinition",
              "key": {
                "type": "Identifier",
                "name": "_subscribe",
                "range": [
                  1600,
                  1610
                ],
                "loc": {
                  "start": {
                    "line": 46,
                    "column": 4
                  },
                  "end": {
                    "line": 46,
                    "column": 14
                  }
                }
              },
              "value": {
                "type": "FunctionExpression",
                "id": null,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "subscriber",
                    "range": [
                      1611,
                      1621
                    ],
                    "loc": {
                      "start": {
                        "line": 46,
                        "column": 15
                      },
                      "end": {
                        "line": 46,
                        "column": 25
                      }
                    }
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "noop",
                          "range": [
                            1634,
                            1638
                          ],
                          "loc": {
                            "start": {
                              "line": 47,
                              "column": 8
                            },
                            "end": {
                              "line": 47,
                              "column": 12
                            }
                          }
                        },
                        "arguments": [],
                        "range": [
                          1634,
                          1640
                        ],
                        "loc": {
                          "start": {
                            "line": 47,
                            "column": 8
                          },
                          "end": {
                            "line": 47,
                            "column": 14
                          }
                        }
                      },
                      "range": [
                        1634,
                        1641
                      ],
                      "loc": {
                        "start": {
                          "line": 47,
                          "column": 8
                        },
                        "end": {
                          "line": 47,
                          "column": 15
                        }
                      }
                    }
                  ],
                  "range": [
                    1623,
                    1648
                  ],
                  "loc": {
                    "start": {
                      "line": 46,
                      "column": 27
                    },
                    "end": {
                      "line": 48,
                      "column": 5
                    }
                  }
                },
                "generator": false,
                "expression": false,
                "range": [
                  1610,
                  1648
                ],
                "loc": {
                  "start": {
                    "line": 46,
                    "column": 14
                  },
                  "end": {
                    "line": 48,
                    "column": 5
                  }
                }
              },
              "kind": "method",
              "computed": false,
              "range": [
                1600,
                1648
              ],
              "loc": {
                "start": {
                  "line": 46,
                  "column": 4
                },
                "end": {
                  "line": 48,
                  "column": 5
                }
              },
              "static": false
            }
          ],
          "range": [
            231,
            1651
          ],
          "loc": {
            "start": {
              "line": 8,
              "column": 48
            },
            "end": {
              "line": 49,
              "column": 1
            }
          }
        },
        "range": [
          190,
          1651
        ],
        "loc": {
          "start": {
            "line": 8,
            "column": 7
          },
          "end": {
            "line": 49,
            "column": 1
          }
        },
        "leadingComments": [
          {
            "type": "Block",
            "value": "*\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @extends {Ignored}\r\n * @hide true\r\n ",
            "range": [
              83,
              181
            ],
            "loc": {
              "start": {
                "line": 3,
                "column": 0
              },
              "end": {
                "line": 7,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "Line",
            "value": "# sourceMappingURL=NeverObservable.js.map",
            "range": [
              1653,
              1696
            ],
            "loc": {
              "start": {
                "line": 50,
                "column": 0
              },
              "end": {
                "line": 50,
                "column": 43
              }
            }
          }
        ]
      },
      "specifiers": [],
      "source": null,
      "range": [
        183,
        1651
      ],
      "loc": {
        "start": {
          "line": 8,
          "column": 0
        },
        "end": {
          "line": 49,
          "column": 1
        }
      },
      "leadingComments": [
        {
          "type": "Block",
          "value": "*\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @extends {Ignored}\r\n * @hide true\r\n ",
          "range": [
            83,
            181
          ],
          "loc": {
            "start": {
              "line": 3,
              "column": 0
            },
            "end": {
              "line": 7,
              "column": 3
            }
          }
        }
      ],
      "trailingComments": [
        {
          "type": "Line",
          "value": "# sourceMappingURL=NeverObservable.js.map",
          "range": [
            1653,
            1696
          ],
          "loc": {
            "start": {
              "line": 50,
              "column": 0
            },
            "end": {
              "line": 50,
              "column": 43
            }
          }
        }
      ]
    }
  ],
  "sourceType": "module",
  "range": [
    0,
    1651
  ],
  "loc": {
    "start": {
      "line": 1,
      "column": 0
    },
    "end": {
      "line": 49,
      "column": 1
    }
  },
  "comments": [
    {
      "type": "Block",
      "value": "*\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @extends {Ignored}\r\n * @hide true\r\n ",
      "range": [
        83,
        181
      ],
      "loc": {
        "start": {
          "line": 3,
          "column": 0
        },
        "end": {
          "line": 7,
          "column": 3
        }
      }
    },
    {
      "type": "Block",
      "value": "*\r\n     * Creates an Observable that emits no items to the Observer.\r\n     *\r\n     * <span class=\"informal\">An Observable that never emits anything.</span>\r\n     *\r\n     * <img src=\"./img/never.png\" width=\"100%\">\r\n     *\r\n     * This static operator is useful for creating a simple Observable that emits\r\n     * neither values nor errors nor the completion notification. It can be used\r\n     * for testing purposes or for composing with other Observables. Please note\r\n     * that by never emitting a complete notification, this Observable keeps the\r\n     * subscription from being disposed automatically. Subscriptions need to be\r\n     * manually disposed.\r\n     *\r\n     * @example <caption>Emit the number 7, then never emit anything else (not even complete).</caption>\r\n     * function info() {\r\n     *   console.log('Will not be called');\r\n     * }\r\n     * var result = Rx.Observable.never().startWith(7);\r\n     * result.subscribe(x => console.log(x), info, info);\r\n     *\r\n     * @see {@link create}\r\n     * @see {@link empty}\r\n     * @see {@link of}\r\n     * @see {@link throw}\r\n     *\r\n     * @return {Observable} A \"never\" Observable: never emits anything.\r\n     * @static true\r\n     * @name never\r\n     * @owner Observable\r\n     ",
      "range": [
        284,
        1525
      ],
      "loc": {
        "start": {
          "line": 12,
          "column": 4
        },
        "end": {
          "line": 42,
          "column": 7
        }
      }
    },
    {
      "type": "Line",
      "value": "# sourceMappingURL=NeverObservable.js.map",
      "range": [
        1653,
        1696
      ],
      "loc": {
        "start": {
          "line": 50,
          "column": 0
        },
        "end": {
          "line": 50,
          "column": 43
        }
      }
    }
  ]
}